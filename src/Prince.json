{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "caseyHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_caseyHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_markusHash",
          "type": "string"
        }
      ],
      "name": "changeHashes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "changeTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "markusHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620015e1380380620015e183398101604081905262000034916200036e565b6040518060400160405280601a81526020017f4d6172737465726c756e6420616e6420746865205072696e63650000000000008152506040518060400160405280600481526020016350524e4360e01b815250816000908162000098919062000445565b506001620000a7828262000445565b505060408051808201909152600581526461723a2f2f60d81b602082015260069150620000d5908262000445565b506040518060600160405280602b8152602001620015b6602b9139600790620000ff908262000445565b506040518060600160405280602b81526020016200158b602b913960089062000129908262000445565b50600980546001600160a01b031916339081179091556200014c90600162000160565b6200015981600262000160565b506200053d565b6200016c82826200025f565b6001600160a01b0382163b1580620002165750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015620001e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020a919062000511565b6001600160e01b031916145b6200025b5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064015b60405180910390fd5b5050565b6001600160a01b038216620002ab5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640162000252565b6000818152600260205260409020546001600160a01b031615620003035760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640162000252565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000602082840312156200038157600080fd5b81516001600160a01b03811681146200039957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003cb57607f821691505b602082108103620003ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044057600081815260208120601f850160051c810160208610156200041b5750805b601f850160051c820191505b818110156200043c5782815560010162000427565b5050505b505050565b81516001600160401b03811115620004615762000461620003a0565b6200047981620004728454620003b6565b84620003f2565b602080601f831160018114620004b15760008415620004985750858301515b600019600386901b1c1916600185901b1785556200043c565b600085815260208120601f198616915b82811015620004e257888601518255948401946001909101908401620004c1565b5085821015620005015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200052457600080fd5b81516001600160e01b0319811681146200039957600080fd5b61103e806200054d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a257806395d89b411161007157806395d89b4114610246578063a22cb4651461024e578063b88d4fde14610261578063c87b56dd14610274578063e985e9c51461028757600080fd5b80636352211e146101f75780636c0360eb1461020a57806370a08231146102125780637d7b17a11461023357600080fd5b80631b5bc883116100e95780631b5bc883146101ae57806323b872dd146101b65780633bb5876c146101c957806340efb8c4146101d157806342842e0e146101e457600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610199575b600080fd5b61012e610129366004610a27565b6102b5565b60405190151581526020015b60405180910390f35b61014b610307565b60405161013a9190610a4b565b610181610166366004610aa0565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b6101ac6101a7366004610ad0565b610395565b005b61014b61045f565b6101ac6101c4366004610afa565b61046c565b61014b610612565b6101ac6101df366004610bd9565b61061f565b6101ac6101f2366004610afa565b610667565b610181610205366004610aa0565b61075a565b61014b6107b1565b610225610220366004610c3d565b6107be565b60405190815260200161013a565b6101ac610241366004610c58565b610821565b61014b61085b565b6101ac61025c366004610c95565b610868565b6101ac61026f366004610cd1565b6108d4565b61014b610282366004610aa0565b6109bc565b61012e610295366004610d6c565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b0319831614806102e657506380ac58cd60e01b6001600160e01b03198316145b806103015750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461031490610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461034090610d9f565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806103de57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6104035760405162461bcd60e51b81526004016103fa90610dd9565b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6007805461031490610d9f565b6000818152600260205260409020546001600160a01b038481169116146104c25760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016103fa565b6001600160a01b03821661050c5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103fa565b336001600160a01b038416148061054657506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061056757506000818152600460205260409020546001600160a01b031633145b6105835760405162461bcd60e51b81526004016103fa90610dd9565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6008805461031490610d9f565b6009546001600160a01b031633146106495760405162461bcd60e51b81526004016103fa90610dd9565b60076106558382610e4f565b5060086106628282610e4f565b505050565b61067283838361046c565b6001600160a01b0382163b158061071b5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610f0f565b6001600160e01b031916145b6106625760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103fa565b6000818152600260205260409020546001600160a01b0316806107ac5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103fa565b919050565b6006805461031490610d9f565b60006001600160a01b0382166108055760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016103fa565b506001600160a01b031660009081526003602052604090205490565b6009546001600160a01b0316331461084b5760405162461bcd60e51b81526004016103fa90610dd9565b60066108578282610e4f565b5050565b6001805461031490610d9f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108df85858561046c565b6001600160a01b0384163b15806109765750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906109279033908a90899089908990600401610f2c565b6020604051808303816000875af1158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a9190610f0f565b6001600160e01b031916145b6109b55760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103fa565b5050505050565b6060816001036109f157600660076040516020016109db929190610ff3565b6040516020818303038152906040529050919050565b816002036107ac57600660086040516020016109db929190610ff3565b6001600160e01b031981168114610a2457600080fd5b50565b600060208284031215610a3957600080fd5b8135610a4481610a0e565b9392505050565b600060208083528351808285015260005b81811015610a7857858101830151858201604001528201610a5c565b81811115610a8a576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610ab257600080fd5b5035919050565b80356001600160a01b03811681146107ac57600080fd5b60008060408385031215610ae357600080fd5b610aec83610ab9565b946020939093013593505050565b600080600060608486031215610b0f57600080fd5b610b1884610ab9565b9250610b2660208501610ab9565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b5d57600080fd5b813567ffffffffffffffff80821115610b7857610b78610b36565b604051601f8301601f19908116603f01168101908282118183101715610ba057610ba0610b36565b81604052838152866020858801011115610bb957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610bec57600080fd5b823567ffffffffffffffff80821115610c0457600080fd5b610c1086838701610b4c565b93506020850135915080821115610c2657600080fd5b50610c3385828601610b4c565b9150509250929050565b600060208284031215610c4f57600080fd5b610a4482610ab9565b600060208284031215610c6a57600080fd5b813567ffffffffffffffff811115610c8157600080fd5b610c8d84828501610b4c565b949350505050565b60008060408385031215610ca857600080fd5b610cb183610ab9565b915060208301358015158114610cc657600080fd5b809150509250929050565b600080600080600060808688031215610ce957600080fd5b610cf286610ab9565b9450610d0060208701610ab9565b935060408601359250606086013567ffffffffffffffff80821115610d2457600080fd5b818801915088601f830112610d3857600080fd5b813581811115610d4757600080fd5b896020828501011115610d5957600080fd5b9699959850939650602001949392505050565b60008060408385031215610d7f57600080fd5b610d8883610ab9565b9150610d9660208401610ab9565b90509250929050565b600181811c90821680610db357607f821691505b602082108103610dd357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d1393d517d055551213d49256915160921b604082015260600190565b601f82111561066257600081815260208120601f850160051c81016020861015610e285750805b601f850160051c820191505b81811015610e4757828155600101610e34565b505050505050565b815167ffffffffffffffff811115610e6957610e69610b36565b610e7d81610e778454610d9f565b84610e01565b602080601f831160018114610eb25760008415610e9a5750858301515b600019600386901b1c1916600185901b178555610e47565b600085815260208120601f198616915b82811015610ee157888601518255948401946001909101908401610ec2565b5085821015610eff5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610f2157600080fd5b8151610a4481610a0e565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60008154610f8d81610d9f565b60018281168015610fa55760018114610fba57610fe9565b60ff1984168752821515830287019450610fe9565b8560005260208060002060005b85811015610fe05781548a820152908401908201610fc7565b50505082870194505b5050505092915050565b6000610c8d6110028386610f80565b84610f8056fea26469706673582212208373aa026fbce2082e78f85442654bc18e57945ac9f1d359c7e3daac25ac9adf64736f6c634300080f00337771795335754754394d6f4b516838797944475441325a5f6b45346546394871327278446b6850586d73495253656d343034365f6239635936584264477a3677364f6150655a525377786c6f69674e7850714a6f626f",
    "sourceMap": "153:1065:1:-:0;;;298:340;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2154:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2154:111:0;;;2227:5;2220:4;:12;;;;;;:::i;:::-;-1:-1:-1;2242:6:0;:16;2251:7;2242:6;:16;:::i;:::-;-1:-1:-1;;385:17:1::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;385:17:1::1;::::0;::::1;::::0;:7:::1;::::0;-1:-1:-1;385:17:1::1;::::0;:7;:17:::1;:::i;:::-;;412:57;;;;;;;;;;;;;;;;;:9;::::0;:57:::1;::::0;:9;:57:::1;:::i;:::-;;479:58;;;;;;;;;;;;;;;;;:10;::::0;:58:::1;::::0;:10;:58:::1;:::i;:::-;-1:-1:-1::0;547:3:1::1;:16:::0;;-1:-1:-1;;;;;;547:16:1::1;553:10;547:16:::0;;::::1;::::0;;;573:24:::1;::::0;547:16;573:9:::1;:24::i;:::-;607;617:10:::0;629:1:::1;607:9;:24::i;:::-;298:340:::0;153:1065;;6185:340:0;6255:13;6261:2;6265;6255:5;:13::i;:::-;-1:-1:-1;;;;;6300:14:0;;;:19;;:176;;-1:-1:-1;6339:72:0;;-1:-1:-1;;;6339:72:0;;;6380:10;6339:72;;;3335:34:2;6400:1:0;3385:18:2;;;3378:43;;;3437:18;;;3430:34;;;3500:3;3480:18;;;3473:31;3520:19;;;3513:30;6431:45:0;-1:-1:-1;;;;;6339:40:0;;;6431:45;;3560:19:2;;6339:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6339:137:0;;6300:176;6279:239;;;;-1:-1:-1;;;6279:239:0;;4087:2:2;6279:239:0;;;4069:21:2;4126:2;4106:18;;;4099:30;-1:-1:-1;;;4145:18:2;;;4138:46;4201:18;;6279:239:0;;;;;;;;;6185:340;;:::o;5243:371::-;-1:-1:-1;;;;;5317:16:0;;5309:46;;;;-1:-1:-1;;;5309:46:0;;4432:2:2;5309:46:0;;;4414:21:2;4471:2;4451:18;;;4444:30;-1:-1:-1;;;4490:18:2;;;4483:47;4547:18;;5309:46:0;4230:341:2;5309:46:0;5398:1;5374:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5374:12:0;:26;5366:53;;;;-1:-1:-1;;;5366:53:0;;4778:2:2;5366:53:0;;;4760:21:2;4817:2;4797:18;;;4790:30;-1:-1:-1;;;4836:18:2;;;4829:44;4890:18;;5366:53:0;4576:338:2;5366:53:0;-1:-1:-1;;;;;5509:14:0;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5546:17:0;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;14:290:2:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:2;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:2;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:2;;;2875:26;2826:89;-1:-1:-1;;1630:1:2;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:2;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:2;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:2;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:2:o;3590:290::-;3659:6;3712:2;3700:9;3691:7;3687:23;3683:32;3680:52;;;3728:1;3725;3718:12;3680:52;3754:16;;-1:-1:-1;;;;;;3799:32:2;;3789:43;;3779:71;;3846:1;3843;3836:12;4576:338;153:1065:1;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "153:1065:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:335:0;;;;;;:::i;:::-;;:::i;:::-;;;565:14:2;;558:22;540:41;;528:2;513:18;4714:335:0;;;;;;;;899:18;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1844:46:0;;;;;;-1:-1:-1;;;;;1543:32:2;;;1525:51;;1513:2;1498:18;1844:46:0;1379:203:2;2453:282:0;;;;;;:::i;:::-;;:::i;:::-;;213:23:1;;;:::i;2950:741:0:-;;;;;;:::i;:::-;;:::i;242:24:1:-;;;:::i;1007:209::-;;;;;;:::i;:::-;;:::i;3697:396:0:-;;;;;;:::i;:::-;;:::i;1327:149::-;;;;;;:::i;:::-;;:::i;186:21:1:-;;;:::i;1482:168:0:-;;;;;;:::i;:::-;;:::i;:::-;;;4098:25:2;;;4086:2;4071:18;1482:168:0;3952:177:2;861:140:1;;;;;;:::i;:::-;;:::i;924:20:0:-;;;:::i;2741:203::-;;;;;;:::i;:::-;;:::i;4099:427::-;;;;;;:::i;:::-;;:::i;644:211:1:-;;;;;;:::i;:::-;;:::i;1897:68:0:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:335;4790:4;-1:-1:-1;;;;;;;;;4825:25:0;;;;:100;;-1:-1:-1;;;;;;;;;;4900:25:0;;;4825:100;:175;;;-1:-1:-1;;;;;;;;;;4975:25:0;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:0:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2540:12:0;2571:10;:19;;;:58;;-1:-1:-1;;;;;;2594:23:0;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;-1:-1:-1;;;2563:85:0;;;;;;;:::i;:::-;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2659:25:0;-1:-1:-1;;;;;2659:25:0;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;213:23:1:-;;;;;;;:::i;2950:741:0:-;3081:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3073:20:0;;;3081:12;;3073:20;3065:43;;;;-1:-1:-1;;;3065:43:0;;6821:2:2;3065:43:0;;;6803:21:2;6860:2;6840:18;;;6833:30;-1:-1:-1;;;6879:18:2;;;6872:40;6929:18;;3065:43:0;6619:334:2;3065:43:0;-1:-1:-1;;;;;3127:16:0;;3119:46;;;;-1:-1:-1;;;3119:46:0;;7160:2:2;3119:46:0;;;7142:21:2;7199:2;7179:18;;;7172:30;-1:-1:-1;;;7218:18:2;;;7211:47;7275:18;;3119:46:0;6958:341:2;3119:46:0;3197:10;-1:-1:-1;;;;;3197:18:0;;;;:56;;-1:-1:-1;;;;;;3219:22:0;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:0;;;;:11;:15;;;;;;-1:-1:-1;;;;;3271:15:0;3257:10;:29;3197:89;3176:150;;;;-1:-1:-1;;;3176:150:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3526:16:0;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3526:18:0;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3596:17:0;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;242:24:1:-;;;;;;;:::i;1007:209::-;1107:3;;-1:-1:-1;;;;;1107:3:1;1114:10;1107:17;1099:44;;;;-1:-1:-1;;;1099:44:1;;;;;;;:::i;:::-;1153:9;:22;1165:10;1153:9;:22;:::i;:::-;-1:-1:-1;1185:10:1;:24;1198:11;1185:10;:24;:::i;:::-;;1007:209;;:::o;3697:396:0:-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;-1:-1:-1;;;;;3874:14:0;;;:19;;:170;;-1:-1:-1;3913:66:0;;-1:-1:-1;;;3913:66:0;;;3954:10;3913:66;;;9813:34:2;-1:-1:-1;;;;;9883:15:2;;;9863:18;;;9856:43;9915:18;;;9908:34;;;9978:3;9958:18;;;9951:31;-1:-1:-1;9998:19:2;;;9991:30;3999:45:0;;3913:40;;;;3999:45;;10038:19:2;;3913:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3913:131:0;;3874:170;3853:233;;;;-1:-1:-1;;;3853:233:0;;10524:2:2;3853:233:0;;;10506:21:2;10563:2;10543:18;;;10536:30;-1:-1:-1;;;10582:18:2;;;10575:46;10638:18;;3853:233:0;10322:340:2;1327:149:0;1385:13;1427:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1427:12:0;;1410:59;;;;-1:-1:-1;;;1410:59:0;;10869:2:2;1410:59:0;;;10851:21:2;10908:2;10888:18;;;10881:30;-1:-1:-1;;;10927:18:2;;;10920:40;10977:18;;1410:59:0;10667:334:2;1410:59:0;1327:149;;;:::o;186:21:1:-;;;;;;;:::i;1482:168:0:-;1545:7;-1:-1:-1;;;;;1572:19:0;;1564:44;;;;-1:-1:-1;;;1564:44:0;;11208:2:2;1564:44:0;;;11190:21:2;11247:2;11227:18;;;11220:30;-1:-1:-1;;;11266:18:2;;;11259:42;11318:18;;1564:44:0;11006:336:2;1564:44:0;-1:-1:-1;;;;;;1626:17:0;;;;;:10;:17;;;;;;;1482:168::o;861:140:1:-;932:3;;-1:-1:-1;;;;;932:3:1;939:10;932:17;924:44;;;;-1:-1:-1;;;924:44:1;;;;;;;:::i;:::-;978:7;:16;988:6;978:7;:16;:::i;:::-;;861:140;:::o;924:20:0:-;;;;;;;:::i;2741:203::-;2843:10;2826:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2826:38:0;;;;;;;;;;;;:49;;-1:-1:-1;;2826:49:0;;;;;;;;;;2891:46;;540:41:2;;;2826:38:0;;2843:10;2891:46;;513:18:2;2891:46:0;;;;;;;2741:203;;:::o;4099:427::-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;-1:-1:-1;;;;;4305:14:0;;;:19;;:172;;-1:-1:-1;4344:68:0;;-1:-1:-1;;;4344:68:0;;;4432:45;-1:-1:-1;;;;;4344:40:0;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4344:133:0;;4305:172;4284:235;;;;-1:-1:-1;;;4284:235:0;;10524:2:2;4284:235:0;;;10506:21:2;10563:2;10543:18;;;10536:30;-1:-1:-1;;;10582:18:2;;;10575:46;10638:18;;4284:235:0;10322:340:2;4284:235:0;4099:427;;;;;:::o;644:211:1:-;704:17;737:2;743:1;737:7;733:52;;767:7;775:9;753:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;746:39;;644:211;;;:::o;733:52::-;799:2;805:1;799:7;795:53;;829:7;837:10;815:33;;;;;;;;;:::i;14:131:2:-;-1:-1:-1;;;;;;88:32:2;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:2:o;592:597::-;704:4;733:2;762;751:9;744:21;794:6;788:13;837:6;832:2;821:9;817:18;810:34;862:1;872:140;886:6;883:1;880:13;872:140;;;981:14;;;977:23;;971:30;947:17;;;966:2;943:26;936:66;901:10;;872:140;;;1030:6;1027:1;1024:13;1021:91;;;1100:1;1095:2;1086:6;1075:9;1071:22;1067:31;1060:42;1021:91;-1:-1:-1;1173:2:2;1152:15;-1:-1:-1;;1148:29:2;1133:45;;;;1180:2;1129:54;;592:597;-1:-1:-1;;;592:597:2:o;1194:180::-;1253:6;1306:2;1294:9;1285:7;1281:23;1277:32;1274:52;;;1322:1;1319;1312:12;1274:52;-1:-1:-1;1345:23:2;;1194:180;-1:-1:-1;1194:180:2:o;1587:173::-;1655:20;;-1:-1:-1;;;;;1704:31:2;;1694:42;;1684:70;;1750:1;1747;1740:12;1765:254;1833:6;1841;1894:2;1882:9;1873:7;1869:23;1865:32;1862:52;;;1910:1;1907;1900:12;1862:52;1933:29;1952:9;1933:29;:::i;:::-;1923:39;2009:2;1994:18;;;;1981:32;;-1:-1:-1;;;1765:254:2:o;2024:328::-;2101:6;2109;2117;2170:2;2158:9;2149:7;2145:23;2141:32;2138:52;;;2186:1;2183;2176:12;2138:52;2209:29;2228:9;2209:29;:::i;:::-;2199:39;;2257:38;2291:2;2280:9;2276:18;2257:38;:::i;:::-;2247:48;;2342:2;2331:9;2327:18;2314:32;2304:42;;2024:328;;;;;:::o;2357:127::-;2418:10;2413:3;2409:20;2406:1;2399:31;2449:4;2446:1;2439:15;2473:4;2470:1;2463:15;2489:719;2532:5;2585:3;2578:4;2570:6;2566:17;2562:27;2552:55;;2603:1;2600;2593:12;2552:55;2639:6;2626:20;2665:18;2702:2;2698;2695:10;2692:36;;;2708:18;;:::i;:::-;2783:2;2777:9;2751:2;2837:13;;-1:-1:-1;;2833:22:2;;;2857:2;2829:31;2825:40;2813:53;;;2881:18;;;2901:22;;;2878:46;2875:72;;;2927:18;;:::i;:::-;2967:10;2963:2;2956:22;3002:2;2994:6;2987:18;3048:3;3041:4;3036:2;3028:6;3024:15;3020:26;3017:35;3014:55;;;3065:1;3062;3055:12;3014:55;3129:2;3122:4;3114:6;3110:17;3103:4;3095:6;3091:17;3078:54;3176:1;3169:4;3164:2;3156:6;3152:15;3148:26;3141:37;3196:6;3187:15;;;;;;2489:719;;;;:::o;3213:543::-;3301:6;3309;3362:2;3350:9;3341:7;3337:23;3333:32;3330:52;;;3378:1;3375;3368:12;3330:52;3418:9;3405:23;3447:18;3488:2;3480:6;3477:14;3474:34;;;3504:1;3501;3494:12;3474:34;3527:50;3569:7;3560:6;3549:9;3545:22;3527:50;:::i;:::-;3517:60;;3630:2;3619:9;3615:18;3602:32;3586:48;;3659:2;3649:8;3646:16;3643:36;;;3675:1;3672;3665:12;3643:36;;3698:52;3742:7;3731:8;3720:9;3716:24;3698:52;:::i;:::-;3688:62;;;3213:543;;;;;:::o;3761:186::-;3820:6;3873:2;3861:9;3852:7;3848:23;3844:32;3841:52;;;3889:1;3886;3879:12;3841:52;3912:29;3931:9;3912:29;:::i;4134:322::-;4203:6;4256:2;4244:9;4235:7;4231:23;4227:32;4224:52;;;4272:1;4269;4262:12;4224:52;4312:9;4299:23;4345:18;4337:6;4334:30;4331:50;;;4377:1;4374;4367:12;4331:50;4400;4442:7;4433:6;4422:9;4418:22;4400:50;:::i;:::-;4390:60;4134:322;-1:-1:-1;;;;4134:322:2:o;4461:347::-;4526:6;4534;4587:2;4575:9;4566:7;4562:23;4558:32;4555:52;;;4603:1;4600;4593:12;4555:52;4626:29;4645:9;4626:29;:::i;:::-;4616:39;;4705:2;4694:9;4690:18;4677:32;4752:5;4745:13;4738:21;4731:5;4728:32;4718:60;;4774:1;4771;4764:12;4718:60;4797:5;4787:15;;;4461:347;;;;;:::o;4813:808::-;4910:6;4918;4926;4934;4942;4995:3;4983:9;4974:7;4970:23;4966:33;4963:53;;;5012:1;5009;5002:12;4963:53;5035:29;5054:9;5035:29;:::i;:::-;5025:39;;5083:38;5117:2;5106:9;5102:18;5083:38;:::i;:::-;5073:48;;5168:2;5157:9;5153:18;5140:32;5130:42;;5223:2;5212:9;5208:18;5195:32;5246:18;5287:2;5279:6;5276:14;5273:34;;;5303:1;5300;5293:12;5273:34;5341:6;5330:9;5326:22;5316:32;;5386:7;5379:4;5375:2;5371:13;5367:27;5357:55;;5408:1;5405;5398:12;5357:55;5448:2;5435:16;5474:2;5466:6;5463:14;5460:34;;;5490:1;5487;5480:12;5460:34;5535:7;5530:2;5521:6;5517:2;5513:15;5509:24;5506:37;5503:57;;;5556:1;5553;5546:12;5503:57;4813:808;;;;-1:-1:-1;4813:808:2;;-1:-1:-1;5587:2:2;5579:11;;5609:6;4813:808;-1:-1:-1;;;4813:808:2:o;5626:260::-;5694:6;5702;5755:2;5743:9;5734:7;5730:23;5726:32;5723:52;;;5771:1;5768;5761:12;5723:52;5794:29;5813:9;5794:29;:::i;:::-;5784:39;;5842:38;5876:2;5865:9;5861:18;5842:38;:::i;:::-;5832:48;;5626:260;;;;;:::o;5891:380::-;5970:1;5966:12;;;;6013;;;6034:61;;6088:4;6080:6;6076:17;6066:27;;6034:61;6141:2;6133:6;6130:14;6110:18;6107:38;6104:161;;6187:10;6182:3;6178:20;6175:1;6168:31;6222:4;6219:1;6212:15;6250:4;6247:1;6240:15;6104:161;;5891:380;;;:::o;6276:338::-;6478:2;6460:21;;;6517:2;6497:18;;;6490:30;-1:-1:-1;;;6551:2:2;6536:18;;6529:44;6605:2;6590:18;;6276:338::o;7430:545::-;7532:2;7527:3;7524:11;7521:448;;;7568:1;7593:5;7589:2;7582:17;7638:4;7634:2;7624:19;7708:2;7696:10;7692:19;7689:1;7685:27;7679:4;7675:38;7744:4;7732:10;7729:20;7726:47;;;-1:-1:-1;7767:4:2;7726:47;7822:2;7817:3;7813:12;7810:1;7806:20;7800:4;7796:31;7786:41;;7877:82;7895:2;7888:5;7885:13;7877:82;;;7940:17;;;7921:1;7910:13;7877:82;;;7881:3;;;7430:545;;;:::o;8151:1352::-;8277:3;8271:10;8304:18;8296:6;8293:30;8290:56;;;8326:18;;:::i;:::-;8355:97;8445:6;8405:38;8437:4;8431:11;8405:38;:::i;:::-;8399:4;8355:97;:::i;:::-;8507:4;;8571:2;8560:14;;8588:1;8583:663;;;;9290:1;9307:6;9304:89;;;-1:-1:-1;9359:19:2;;;9353:26;9304:89;-1:-1:-1;;8108:1:2;8104:11;;;8100:24;8096:29;8086:40;8132:1;8128:11;;;8083:57;9406:81;;8553:944;;8583:663;7377:1;7370:14;;;7414:4;7401:18;;-1:-1:-1;;8619:20:2;;;8737:236;8751:7;8748:1;8745:14;8737:236;;;8840:19;;;8834:26;8819:42;;8932:27;;;;8900:1;8888:14;;;;8767:19;;8737:236;;;8741:3;9001:6;8992:7;8989:19;8986:201;;;9062:19;;;9056:26;-1:-1:-1;;9145:1:2;9141:14;;;9157:3;9137:24;9133:37;9129:42;9114:58;9099:74;;8986:201;-1:-1:-1;;;;;9233:1:2;9217:14;;;9213:22;9200:36;;-1:-1:-1;8151:1352:2:o;10068:249::-;10137:6;10190:2;10178:9;10169:7;10165:23;10161:32;10158:52;;;10206:1;10203;10196:12;10158:52;10238:9;10232:16;10257:30;10281:5;10257:30;:::i;11347:662::-;-1:-1:-1;;;;;11626:15:2;;;11608:34;;11678:15;;11673:2;11658:18;;11651:43;11725:2;11710:18;;11703:34;;;11773:3;11768:2;11753:18;;11746:31;;;11793:19;;11786:35;;;11551:4;11814:6;11864;11588:3;11843:19;;11830:49;11929:1;11923:3;11914:6;11903:9;11899:22;11895:32;11888:43;11999:3;11992:2;11988:7;11983:2;11975:6;11971:15;11967:29;11956:9;11952:45;11948:55;11940:63;;11347:662;;;;;;;;:::o;12014:722::-;12064:3;12105:5;12099:12;12134:36;12160:9;12134:36;:::i;:::-;12189:1;12206:18;;;12233:133;;;;12380:1;12375:355;;;;12199:531;;12233:133;-1:-1:-1;;12266:24:2;;12254:37;;12339:14;;12332:22;12320:35;;12311:45;;;-1:-1:-1;12233:133:2;;12375:355;12406:5;12403:1;12396:16;12435:4;12480:2;12477:1;12467:16;12505:1;12519:165;12533:6;12530:1;12527:13;12519:165;;;12611:14;;12598:11;;;12591:35;12654:16;;;;12548:10;;12519:165;;;12523:3;;;12713:6;12708:3;12704:16;12697:23;;12199:531;;;;;12014:722;;;;:::o;12741:277::-;12914:3;12939:73;12973:38;13007:3;12999:6;12973:38;:::i;:::-;12965:6;12939:73;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "caseyHash()": "1b5bc883",
    "changeHashes(string,string)": "40efb8c4",
    "changeTokenURI(string)": "7d7b17a1",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "markusHash()": "3bb5876c",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"caseyHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_caseyHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_markusHash\",\"type\":\"string\"}],\"name\":\"changeHashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"changeTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"markusHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Portraits.sol\":\"Prince\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"src/Portraits.sol\":{\"keccak256\":\"0xd8324775d469a6009b0d6d832e8222694bd2343e8b638fdb512c5f75797dd638\",\"license\":\"none\",\"urls\":[\"bzz-raw://a7adca4743d5f6571b4203a70822f8a786aafc58822f6787e6ab3bf98683b557\",\"dweb:/ipfs/QmW4P9ZkZv5L3yi82Es6qSbJgJajxTGGPqMsAWAkQPWfnL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "caseyHash",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_caseyHash",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_markusHash",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeHashes"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeTokenURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "markusHash",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Portraits.sol": "Prince"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Portraits.sol": {
        "keccak256": "0xd8324775d469a6009b0d6d832e8222694bd2343e8b638fdb512c5f75797dd638",
        "urls": [
          "bzz-raw://a7adca4743d5f6571b4203a70822f8a786aafc58822f6787e6ab3bf98683b557",
          "dweb:/ipfs/QmW4P9ZkZv5L3yi82Es6qSbJgJajxTGGPqMsAWAkQPWfnL"
        ],
        "license": "none"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Portraits.sol",
    "id": 689,
    "exportedSymbols": {
      "ERC721": [
        543
      ],
      "ERC721TokenReceiver": [
        563
      ],
      "Prince": [
        688
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1186:1",
    "nodes": [
      {
        "id": 565,
        "nodeType": "PragmaDirective",
        "src": "33:23:1",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 566,
        "nodeType": "ImportDirective",
        "src": "58:35:1",
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 689,
        "sourceUnit": 564,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 688,
        "nodeType": "ContractDefinition",
        "src": "153:1065:1",
        "nodes": [
          {
            "id": 570,
            "nodeType": "VariableDeclaration",
            "src": "186:21:1",
            "constant": false,
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "200:7:1",
            "scope": 688,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 569,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "186:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 572,
            "nodeType": "VariableDeclaration",
            "src": "213:23:1",
            "constant": false,
            "functionSelector": "1b5bc883",
            "mutability": "mutable",
            "name": "caseyHash",
            "nameLocation": "227:9:1",
            "scope": 688,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 571,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "213:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 574,
            "nodeType": "VariableDeclaration",
            "src": "242:24:1",
            "constant": false,
            "functionSelector": "3bb5876c",
            "mutability": "mutable",
            "name": "markusHash",
            "nameLocation": "256:10:1",
            "scope": 688,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 573,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "242:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 576,
            "nodeType": "VariableDeclaration",
            "src": "272:19:1",
            "constant": false,
            "mutability": "mutable",
            "name": "dev",
            "nameLocation": "288:3:1",
            "scope": 688,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 575,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "272:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 614,
            "nodeType": "FunctionDefinition",
            "src": "298:340:1",
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "375:263:1",
              "statements": [
                {
                  "expression": {
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 585,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "385:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "61723a2f2f",
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "395:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_26d5ec23e7286f29557d3ce1cc10d252111c393dfc8bec50ca2b1e85a218ff62",
                        "typeString": "literal_string \"ar://\""
                      },
                      "value": "ar://"
                    },
                    "src": "385:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "385:17:1"
                },
                {
                  "expression": {
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 589,
                      "name": "caseyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "412:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "5253656d343034365f6239635936584264477a3677364f6150655a525377786c6f69674e7850714a6f626f",
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "424:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_9816250530ec8a419b16b036dd75245dc2ef7f351a2e0e821a29c6c20997cb47",
                        "typeString": "literal_string \"RSem4046_b9cY6XBdGz6w6OaPeZRSwxloigNxPqJobo\""
                      },
                      "value": "RSem4046_b9cY6XBdGz6w6OaPeZRSwxloigNxPqJobo"
                    },
                    "src": "412:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 592,
                  "nodeType": "ExpressionStatement",
                  "src": "412:57:1"
                },
                {
                  "expression": {
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 593,
                      "name": "markusHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "479:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7771795335754754394d6f4b516838797944475441325a5f6b45346546394871327278446b6850586d7349",
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "492:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8eebf932000a863b5df6cc90f7169014fbdd766753dad74820c770417fb5d559",
                        "typeString": "literal_string \"wqyS5uGT9MoKQh8yyDGTA2Z_kE4eF9Hq2rxDkhPXmsI\""
                      },
                      "value": "wqyS5uGT9MoKQh8yyDGTA2Z_kE4eF9Hq2rxDkhPXmsI"
                    },
                    "src": "479:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "479:58:1"
                },
                {
                  "expression": {
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 597,
                      "name": "dev",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "547:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 598,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "553:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "553:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "547:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "547:16:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "583:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "583:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "595:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 602,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        500,
                        542
                      ],
                      "referencedDeclaration": 500,
                      "src": "573:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "573:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "573:24:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 609,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "617:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "629:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 608,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        500,
                        542
                      ],
                      "referencedDeclaration": 500,
                      "src": "607:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "607:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "607:24:1"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6172737465726c756e6420616e6420746865205072696e6365",
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "337:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ce2591f2ff1189318a588b6735725a3bc963bdcbd8abd960af144bf2f4838d4e",
                      "typeString": "literal_string \"Marsterlund and the Prince\""
                    },
                    "value": "Marsterlund and the Prince"
                  },
                  {
                    "hexValue": "50524e43",
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "367:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f56189f9b5dfefbe753a68a3e49700848e0b01e0eb06b8d7c242ed76257461b8",
                      "typeString": "literal_string \"PRNC\""
                    },
                    "value": "PRNC"
                  }
                ],
                "id": 583,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 580,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 543,
                  "src": "330:6:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "330:44:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "318:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "310:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:20:1"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:0:1"
            },
            "scope": 688,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 645,
            "nodeType": "FunctionDefinition",
            "src": "644:211:1",
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "723:132:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 622,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "737:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "743:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "737:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 632,
                  "nodeType": "IfStatement",
                  "src": "733:52:1",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 628,
                          "name": "baseURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 570,
                          "src": "767:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "id": 629,
                          "name": "caseyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 572,
                          "src": "775:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "753:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 625,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "753:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "753:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                          "typeString": "function () pure returns (string memory)"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "753:32:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "functionReturnParameters": 621,
                    "id": 631,
                    "nodeType": "Return",
                    "src": "746:39:1"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 633,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "799:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "805:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "799:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 643,
                  "nodeType": "IfStatement",
                  "src": "795:53:1",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 639,
                          "name": "baseURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 570,
                          "src": "829:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "id": 640,
                          "name": "markusHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "837:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "815:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 636,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "815:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "815:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                          "typeString": "function () pure returns (string memory)"
                        }
                      },
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "815:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "functionReturnParameters": 621,
                    "id": 642,
                    "nodeType": "Return",
                    "src": "808:40:1"
                  }
                }
              ]
            },
            "baseFunctions": [
              37
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "653:8:1",
            "overrides": {
              "id": 618,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "686:8:1"
            },
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "670:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "662:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:12:1"
            },
            "returnParameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "718:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "704:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "704:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "703:19:1"
            },
            "scope": 688,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 663,
            "nodeType": "FunctionDefinition",
            "src": "861:140:1",
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "914:87:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 651,
                          "name": "dev",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "932:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 652,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "939:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "939:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "932:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f545f415554484f52495a4544",
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "951:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                          "typeString": "literal_string \"NOT_AUTHORIZED\""
                        },
                        "value": "NOT_AUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                          "typeString": "literal_string \"NOT_AUTHORIZED\""
                        }
                      ],
                      "id": 650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "924:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "924:44:1"
                },
                {
                  "expression": {
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 658,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "978:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 659,
                      "name": "newURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "988:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "978:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "978:16:1"
                }
              ]
            },
            "functionSelector": "7d7b17a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeTokenURI",
            "nameLocation": "870:14:1",
            "parameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "newURI",
                  "nameLocation": "899:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "885:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:22:1"
            },
            "returnParameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:0:1"
            },
            "scope": 688,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 687,
            "nodeType": "FunctionDefinition",
            "src": "1007:209:1",
            "body": {
              "id": 686,
              "nodeType": "Block",
              "src": "1089:127:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 671,
                          "name": "dev",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "1107:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 672,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1114:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1114:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1107:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f545f415554484f52495a4544",
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1126:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                          "typeString": "literal_string \"NOT_AUTHORIZED\""
                        },
                        "value": "NOT_AUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                          "typeString": "literal_string \"NOT_AUTHORIZED\""
                        }
                      ],
                      "id": 670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1099:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:44:1"
                },
                {
                  "expression": {
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 678,
                      "name": "caseyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "1153:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 679,
                      "name": "_caseyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "1165:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1153:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:22:1"
                },
                {
                  "expression": {
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 682,
                      "name": "markusHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "1185:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 683,
                      "name": "_markusHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "1198:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1185:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:24:1"
                }
              ]
            },
            "functionSelector": "40efb8c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeHashes",
            "nameLocation": "1016:12:1",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "_caseyHash",
                  "nameLocation": "1043:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "1029:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "_markusHash",
                  "nameLocation": "1069:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "1055:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1028:53:1"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:0:1"
            },
            "scope": 688,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 567,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 543,
              "src": "172:6:1"
            },
            "id": 568,
            "nodeType": "InheritanceSpecifier",
            "src": "172:6:1"
          }
        ],
        "canonicalName": "Prince",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          688,
          543
        ],
        "name": "Prince",
        "nameLocation": "162:6:1",
        "scope": 689,
        "usedErrors": []
      }
    ],
    "license": "none"
  },
  "id": 1
}